!function(t,i,e){"use strict";function a(){var i=t("#image-canvas")[0],e=t("canvas"),a=e.width(),c=e.height();o=new r,o.image=this,o.canvas=i,o.changeSize(this.width,this.height,a),o.y=Math.floor(c/2-o.height/2),o.x=Math.floor(a/2-o.width/2),o.draw(),t("#opacity-label").text("Opacity: 100%"),t(".setting").each(function(t,i){i.disabled=!1}).filter("#size").each(function(t,i){var e=this.width,a=o.width;i.min=.1*e,e>a?i.max=a:i.max=e,i.value=a,h(e,a)}.bind(this)).on("input",function(t){var i=t.target.value,e=o.width,a=o.height;o.changeSize(this.width,this.height,i),o.x-=n(o.width,e)/2,o.y-=n(o.height,a)/2,o.draw(),h(this.width,i)}.bind(this)).end().filter("#opacity").each(function(){}).on("input",function(i){var e=i.target.value;t("#opacity-label").text("Opacity: "+Math.floor(100*e)+"%"),o.canvas.getContext("2d").globalAlpha=e,o.draw()}).end().filter("#filter").change(function(i){var e=t("#filter-canvas"),n=e[0].getContext("2d");n.fillStyle=i.target.value,n.fillRect(0,0,a,c)}).end().filter("#clear").click(function(){var i=t("#filter-canvas")[0].getContext("2d");i.clearRect(0,0,a,c),t("")}).end().filter("#filter-opacity").each(function(i,e){t("#filter-canvas")[0].getContext("2d").globalAlpha=e.value,t("#filter-opacity-label").append(" "+Math.floor(100*e.value)+"%")}).change(function(i){var e=t("#filter-canvas"),n=e[0].getContext("2d");n.globalAlpha=i.target.value,n.clearRect(0,0,a,c),n.fillRect(0,0,a,c),t("#filter-opacity-label").text("Filter Opacity: "+Math.floor(100*i.target.value)+"%")})}function n(t,i){return t>i?Math.floor(t-i):Math.floor(-(i-t))}function h(i,e){var a=Math.floor(e/i*100);t("#size-label").text("size: "+a+"%")}function r(t){this.image=t,this.canvas=null,this.x=0,this.y=0,this.prevX=0,this.prevY=0,this.width=0,this.height=0}var o=new r,c=!1;t("canvas").each(function(i,e){var a=t(e);t(".canvas-container").height(a.parent().width()),e.width=a.parent().width(),e.height=a.parent().width()}).filter("#image-canvas").mousedown(function(){c=!0}).mouseup(function(){c=!1}).mousemove(function(t){o.image&&c&&(o.x+=n(t.clientX,o.prevX),o.y+=n(t.clientY,o.prevY),o.draw()),o.prevX=t.clientX,o.prevY=t.clientY}),t("#file").change(function(t){var i=t.target.files[0],e=new Image;e.onload=a,e.src=URL.createObjectURL(i)}),r.prototype.changeSize=function(t,i,e){if(e>t&&e>i)return this.width=this.image.width,void(this.height=this.image.height);var a=i/t,n=Math.ceil(a*e);if(n>e){var h=t/i,r=Math.ceil(h*e);this.width=r,this.height=e}else this.width=e,this.height=n},r.prototype.setPos=function(t,i){this.x=t,this.y=i},r.prototype.draw=function(i,e,a,n){i=i||this.x,e=e||this.y,a=a||this.width,n=n||this.height;var h=t(this.canvas),r=this.canvas.getContext("2d");r.clearRect(0,0,h.width(),h.height()),console.log(a,n),r.drawImage(this.image,i,e,a,n)};var s=function(i){return function(e){var a,n=t(".username").val(),h=t(".password").val();if("login"==i)a={username:n,password:h};else if("register"==i){var r=t(".confirm").val();if(confim!=h)return t("#error").val("passwords don't match."),!1;a={username:n,password:h,confirm:r}}return t.ajax({url:"/users/"+i,method:"POST",data:a,success:function(t){}}),!1}};t("#login").submit(s("login")),t("#register").submit(s("register"))}($,window,document);
//# sourceMappingURL=data:application/json;base64,
